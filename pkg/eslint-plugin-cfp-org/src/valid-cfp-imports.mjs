const validUtilNames = new Set([
  'add',
  'all',
  'alter',
  'any',
  'append',
  'appendAll',
  'appendOne',
  'assignDefaults',
  'assignOverrides',
  'compareByPath',
  'compareByProp',
  'compose',
  'containedIn',
  'contains',
  'dateIsBetween',
  'defaultFalseyValTo',
  'defaultNullishValTo',
  'discard',
  'discardFirst',
  'discardFirstWhile',
  'discardLast',
  'discardLastWhile',
  'discardRange',
  'discardWhen',
  'divideBy',
  'endsWith',
  'expand',
  'expandEnd',
  'expandStart',
  'fillRangeWith',
  'fillWith',
  'find',
  'findKey',
  'findKeyWithVal',
  'findLast',
  'findLastKey',
  'findLastKeyWithVal',
  'first',
  'flattenFully',
  'flattenOnce',
  'flattenToDepth',
  'forEach',
  'get',
  'getAtPath',
  'getAverageValue',
  'getCommonValues',
  'getExclusiveValues',
  'getKeys',
  'getMaxValue',
  'getMinValue',
  'getRandomValue',
  'getSize',
  'getValueAtMapKey',
  'getValues',
  'greaterThan',
  'greaterThanOrEqualTo',
  'groupBy',
  'invert',
  'invokeWith',
  'isAfter',
  'isAtOrAfter',
  'isAtOrBefore',
  'isBefore',
  'isEmpty',
  'isFalsey',
  'isLaden',
  'isTruthy',
  'joinValues',
  'keep',
  'keepFirst',
  'keepFirstWhile',
  'keepLast',
  'keepLastWhile',
  'keepRange',
  'keepWhen',
  'last',
  'lessThan',
  'lessThanOrEqualTo',
  'mapKeys',
  'mAppendAll',
  'mAppendOne',
  'mapValues',
  'mAssignDefaults',
  'mAssignOverrides',
  'mDiscardFirst',
  'mDiscardFirstWhile',
  'mDiscardLast',
  'mDiscardLastWhile',
  'mDiscardRange',
  'mFillRangeWith',
  'mFillWith',
  'mKeepFirst',
  'mKeepFirstWhile',
  'mKeepLast',
  'mKeepLastWhile',
  'mKeepRange',
  'mMapValues',
  'mOmit',
  'mOrder',
  'mPick',
  'mPrependAll',
  'mPrependOne',
  'mReverse',
  'mSet',
  'mSetAtPath',
  'mShuffle',
  'multiplyBy',
  'mUpdate',
  'negate',
  'numberIsBetween',
  'omit',
  'order',
  'pAll',
  'pAny',
  'passThrough',
  'pCompose',
  'pDiscardWhen',
  'peek',
  'pFind',
  'pForEach',
  'pick',
  'pKeepWhen',
  'pMapValues',
  'pPassThrough',
  'prepend',
  'prependAll',
  'prependOne',
  'pResolveValues',
  'prune',
  'pruneEnd',
  'pruneStart',
  'pWaitMs',
  'randomlyKeep',
  'replaceAllMatches',
  'replaceFirstMatch',
  'returnFirstArg',
  'returnUndefined',
  'reverse',
  'roundToNearest',
  'set',
  'shuffle',
  'split',
  'splitEvery',
  'startsWith',
  'strictEquals',
  'subtract',
  'sumValues',
  'swapFirstTwoArgs',
  'transpose',
  'truncateToNChars',
  'truncateToNLines',
  'update',
  'withDatesAscending',
  'withDatesDescending',
  'withNumbersAscending',
  'withNumbersDescending',
  'withStringsAscending',
  'withStringsDescending',
])

const validTypeNames = new Set([
  'ArrayOfSameType',
  'Collection',
  'CollectionEntriesIterator',
  'CollectionKey',
  'CollectionKeysIterator',
  'CollectionSubset',
  'CollectionValue',
  'EntryCollection',
  'Falsey',
  'IfEqual',
  'IfUnknownOrAny',
  'IntRangeTuple',
  'IntRangeUnion',
  'IsNotTuple',
  'IsTuple',
  'KeyedCollection',
  'MutableEntryCollection',
  'MutableKeyedCollection',
  'Nullish',
  'ObjectKey',
  'Sequence',
  'SequenceItem',
  'SubSequence',
  'UnknownArray',
  'UnknownFunction',
  'UnknownMap',
  'UnknownMutableArray',
  'UnknownRecord',
  'UnknownSet',
  'ValueAtKey',
  'ValueAtPath',
  'ValueCollection',
  'WithPropertyKeyType',
  'WithUnknownKeyType',
  'WithValueType',
])

export { validUtilNames, validTypeNames }
