import dedent from 'dedent'
import { isOneOf } from './utils.mjs'

export default {
  endsWith: {
    minimal: [true, false],
    notebook: [['B', 'C']],
  },
  expand: {
    minimal: ['ab-', 'abc', '-ab--', '-abc-'],
    comment: [
      dedent(`
        // |==============================|
        // |      Autogenerated code      |
        // |        Do not modify!        |
        // |==============================|
      `),
    ],
  },
  expandEnd: {
    minimal: ['a--', 'ab-', 'abc'],
    recipe: [
      dedent(`
        Sugar               1 1/2 Cups
        Flour               3/4 Cup
        Cocoa               2/3 Cup
        Chocolate Chips     1/2 Cup
        Eggs                2
      `),
    ],
  },
  expandStart: {
    minimal: ['--a', '-ab', 'abc'],
    fileId: [
      dedent(`
        profile-picture-00078.jpg
        profile-picture-00196.jpg
        profile-picture-00352.jpg
        profile-picture-22081.jpg
      `),
    ],
  },
  fillRangeWith: {
    minimal: [[1, 0, 0, 4], [1, 0], []],
    schedule: [
      [
        'closed',
        'closed',
        'closed',
        'closed',
        ['1pm-2:30'],
        ['2pm-3'],
        'closed',
      ],
    ],
  },
  fillWith: {
    minimal: [[0, 0, 0], { a: 0, b: 0 }],
    monopoly: [
      {
        grace: 1500,
        sam: 1500,
        jen: 1500,
      },
    ],
  },
  find: {
    minimal: [2, undefined, 2],
    directory: ['555-7692'],
  },
  findKey: {
    minimal: [2, 1, undefined, 'b'],
    kitten: ['luna'],
  },
  findKeyWithVal: {
    minimal: [1, 1, undefined, 'b', 1],
    raffle: ['luke'],
  },
  findLast: {
    minimal: [2, undefined],
    movies: ['Mike Hammer: Murder Takes All'],
  },
  findLastKey: {
    minimal: [1, undefined],
    opening: ['thursday'],
  },
  findLastKeyWithVal: {
    minimal: [2, undefined, 2],
    weight: [7],
  },
  first: {
    minimal: ['a', 'a', undefined],
    cheap: ['4.68'],
  },
  flattenFully: {
    minimal: [['a', 'b', 'c']],
    files: [
      [
        '/project/package.json',
        '/project/assets/styles.css',
        '/project/assets/logo.png',
        '/project/src/index.html',
        '/project/src/index.js',
        '/project/src/components/header.js',
        '/project/src/components/footer.js',
      ],
    ],
  },
  flattenOnce: {
    minimal: [['a', 'b', ['c']]],
    family: [['phil', 'mary', 'sarah', 'matt', 'jason']],
  },
  flattenToDepth: {
    minimal: [['a', 'b', 'c', ['d']]],
    bonus: [['grace', 'sam', 'jen', 'mike', 'luke', 'emma']],
  },
  forEach: {
    minimal: ['0: 1', '1: 2', '2: 3', 'a: 1', 'b: 2', 'c: 3'],
    analytics: [
      {
        chris: 2,
        liz: 2,
        phil: 1,
      },
    ],
  },
  get: {
    minimal: ['b', undefined, 'a'],
    conference: [['liz', 'phil', 'mary']],
  },
  getAtPath: {
    minimal: ['c', undefined, 'b'],
    streets: [
      {
        chris: '123 Main',
        liz: '987 Park',
        phil: '555 Oak',
      },
    ],
  },
  getAverageValue: {
    minimal: [2.5, undefined],
    scores: [84.3],
  },
  getCommonValues: {
    minimal: [['b', 'c']],
    available: [[9, 10]],
  },
  getExclusiveValues: {
    minimal: [['a', 'c']],
    exclusive: [['sarah', 'amy']],
  },
  getKeys: {
    minimal: [['a', 'b']],
    oneHundredMeter: [['mary', 'sarah']],
  },
  getMaxValue: {
    minimal: [3, undefined],
    views: [5401],
  },
  getMinValue: {
    minimal: [1, undefined],
    biking: ['31m 47s'],
  },
  getRandomValue: {
    minimal: [isOneOf(['a', 'b', 'c'])],
    first: [isOneOf(['tom', 'ken', 'chris'])],
  },
  getSize: {
    minimal: [3, 3, 3],
    students: [7],
  },
  getValueAtMapKey: {
    minimal: [1, undefined],
    metro: [
      {
        balance: '21.95',
        status: 'active',
      },
    ],
  },
  getValues: {
    minimal: [[1, 2]],
    popularShows: [
      [
        'Untamed',
        'Amy Bradly Is Missing',
        'Sandman',
        'Bachelor in Paradise',
        'Washington Black',
        'Love Island',
      ],
    ],
  },
  greaterThan: {
    minimal: [false, true],
    boots: [['columbia', 'keen']],
  },
  greaterThanOrEqualTo: {
    minimal: [false, true],
    rollerCoaster: [['sarah', 'jason']],
  },
  groupBy: {
    minimal: [
      {
        1: [1.2, 1.8],
        2: [2.7],
      },
    ],
    jetSkis: [
      {
        beginner: [
          {
            brand: 'WaveRunner',
            mph: 45,
          },
        ],
        proficient: [
          {
            brand: 'Sea-Doo',
            mph: 50,
          },
          {
            brand: 'Jet Ski',
            mph: 55,
          },
        ],
      },
    ],
  },
}
